The Syntactic Web:
------------------------------------------------
Most of the Web Today is syntactic. That is, information presentation is carried out
by Computers. But the interpretation and identification of relevant information is 
delegated to human beings. The interpretation part is demanding!!

The question is : Why can't computers do the "interpretation" job too?
Some of the problems with the Syntactic Web are:

0. HTML does not attach any semantics to its tags. It is "format" centric.
   (An anchor tag <a> only tells the reader that the content is a hyperlink.
     But nothing else is told about the anchor)
1. A lot of web pages do not contain information about themselves (meta data).
2. Low "recall precisions". Pages with matching words may be returned by a good
   search engine, but the words may just be mentioned "in passing" by the web pages
   and hence the match is really not "strong".   
3. Search results are sensitive to vocabularies used. 
   For instance the search for "TCP/IP" and "Protocol" (together), may end up skipping
   all those pages which describe TCP/IP as a "Standard". 
4. Search results appear as a list of references to individual pages. However many of
   these may belong to the same "Web Site". Getting the complete set of relevant entries
   may be cumbersome.
   
Ex: Will there be another player like Sir IVA Richards?
Sample search could be: "Another Richards", "Another Richards, Young", "Next Richards"

Or a very complicated query like:
"How many players from the Southern Hemisphere have scored more than 20 centuries
against teams from the Northern Hemisphere and have also acted in atleast 1 movie?"

   
The Semantic Web:  Web of Documents vs Web of Data
----------------------------------------------------
The Semantic Web aims to solve the above problems. That is, Computers will try and
"interpret" information to some extent before presenting it to the end user.

According to the W3C, 
"The Semantic Web provides a common framework that allows data to be shared and reused across application, enterprise, and community boundaries". 

The aim is to restructure data available on the Web so that we can accomplish the above
tasks effectively. So Berners Lee effectively says - Store data in a format which cane
be understood by machines too (so move from a "Web of Documents" to a "Web of Data")


The Main Components (themes) of the Semantic Web are:
1. Concepts - Meta data, Ontologies, Web Services
2. Applications - Semantic Desktop Apps
3. Technologies - Tools for Ontology development

Ontology vs Taxonomy:
Both are similar but Ontology is deeper. Taxonomy only provides information in a 
hierarchical manner. Ontology can add conditions, cardinalities etc.

The RDF, OWL, SPARQL
RDF (A light-weight ontology language) 
    - Data is stored as triples - (Subject Predicate Object)
    - XML based.
	- Databases which store information in RDF format are called TripleStores.
	
Ex: "Ashish likes Coffee" could be a piece of information in a document. This
is represented in RDF as three columns. Subject is "Ashish", predicate is "likes"
and object is "Coffee".

When this is represented as XML, it could look like:
		<Description about="Ashish">
			<likes>Coffee</likes>
		</Description>
RDF documents usually have schema information associated with them in a RDFS document.

	
SPARQL - SPARQL Protocol and RDF Querying Language

		Basics of SPARQL
		Ex:

			SELECT ?x
			FROM <somefile.rdf>
			WHERE {?x  <predicate>  "object"}
			
			You need a SPARQL processor and the RDF file to process this query
			The result is typically JSON/XML.
			
			So loosely,the way to run this query could be
			:sparql.bat -data in.rdf -query query.rq
			
		SPARQL queries usually run remotely. That is, over the net.
		So typically Web Services will be calling them.

		Now you can imagine what happens when the BIG query executes.

		
Popular Semantic Web Framworks - Eclipse RDF4J (Formerly Sesame)
								- Apache Jena (includes SPARQL Engine, TDB + APIs)
								- RedLand (Free 'C' based framework)
								
OWL vs RDFSchema. OWL stands for Web Ontology Language.
OWL is much bigger than the RDFSchema. OWL allows us to write very complicated rules.

	
The Layered Cake of Semantic Web (See attachment - jpeg)
NOTE: no need to memorise this block diagram :)

